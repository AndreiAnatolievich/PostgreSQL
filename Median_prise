WITH 
main_table AS 
( SELECT order_price, 
ROW_NUMBER() OVER (ORDER BY order_price) AS row_number, 
COUNT(*) OVER() AS total_rows 
FROM 
( SELECT SUM(price) AS order_price 
FROM 
( SELECT order_id,
product_ids, 
UNNEST(product_ids) AS product_id
FROM orders 
WHERE order_id NOT IN (SELECT order_id FROM user_actions WHERE action='cancel_order') ) t3 
LEFT JOIN products 
USING(product_id) 
GROUP BY order_id ) t1 ) 
SELECT AVG(order_price) AS median_price 
FROM main_table 
WHERE row_number BETWEEN total_rows/2.0 AND total_rows/2.0 + 1

or main

WITH order_sums AS (
    SELECT 
        SUM(price) AS order_price
    FROM (
        SELECT 
            order_id,
            product_ids,
            UNNEST(product_ids) AS product_id
        FROM 
            orders
        WHERE 
            order_id NOT IN (SELECT order_id FROM user_actions WHERE action = 'cancel_order')
    ) t1
    LEFT JOIN products USING(product_id)
    GROUP BY order_id
),
ordered_sums AS (
    SELECT 
        order_price,
        ROW_NUMBER() OVER (ORDER BY order_price) AS rn,
        COUNT(*) OVER () AS total_count
    FROM 
        order_sums
)

SELECT 
    AVG(order_price) AS median_order_price
FROM 
    ordered_sums
WHERE 
    rn IN ((total_count + 1) / 2, (total_count + 2) / 2)
